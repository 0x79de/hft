version: '3.8'

services:
  hft-trading:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: hft-trading-system
    restart: unless-stopped
    
    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    # Environment configuration
    environment:
      - RUST_LOG=info
      - HFT_CONFIG_PATH=/app/config/production.toml
      - HFT_LOG_LEVEL=info
      - HFT_METRICS_PORT=8080
      - HFT_ENABLE_PROFILING=true
      - RUST_BACKTRACE=1
    
    # Port mapping
    ports:
      - "8080:8080"  # Metrics/monitoring port
      - "9090:9090"  # Trading API port (if enabled)
    
    # Volume mounts
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    
    # Network configuration
    networks:
      - hft-network
    
    # Health check
    healthcheck:
      test: ["CMD", "./hft", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: hft-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - hft-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hft-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - hft-network
    depends_on:
      - prometheus

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: hft-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - hft-network

networks:
  hft-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
  redis-data: